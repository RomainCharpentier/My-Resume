{"version":3,"sources":["components/GitRepository.js","components/GitRepositoryList.js","components/Skill.js","components/SkillList.js","pages/MainPage.js","pages/NotFoundPage.js","pages/ConstructionPage.js","components/LangButton.js","components/Header.js","App.js","serviceWorker.js","index.js","assets/logo.svg","assets/under_construction.png"],"names":["GitRepository","Link","color","href","this","props","repo","clone_url","name","Typography","description","a","b","updated_at","Component","GitRepositoryList","state","performSearch","bind","axios","get","then","response","setState","repos","data","forceUpdate","catch","error","console","log","results","length","sort","compare","map","key","id","List","Skill","classes","value","Slider","container","slider","withStyles","padding","SkillList","Box","display","Copyright","variant","align","Date","getFullYear","MainPage","Container","maxWidth","my","component","gutterBottom","t","param","NotFoundPage","translate","React","ConstructionPage","className","logo","alt","src","under_construction","width","height","LangButton","handleChange","event","setLanguage","target","RadioGroup","aria-label","defaultValue","onChange","FormControlLabel","control","Radio","label","Header","handleDrawerOpen","handleDrawerClose","AppBar","position","clsx","appBar","appBarShift","open","Toolbar","IconButton","onClick","edge","menuButton","hide","noWrap","title","Avatar","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","Divider","window","theme","text","index","ListItem","button","ListItemIcon","ListItemText","primary","App","root","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","marginRight","spacing","flexShrink","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","toggleDarkTheme","newPaletteType","palette","type","routes","ThemeProvider","createMuiTheme","CssBaseline","Boolean","location","hostname","match","setDefaultTranslations","fr","en","setDefaultLanguage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6068811a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, Typography } from '@material-ui/core';\r\n\r\nexport default class GitRepository extends Component {\r\n\r\n    static compare(a, b) {\r\n        if (a.updated_at > b.updated_at) return -1;\r\n        if (a.updated_at < b.updated_at) return 1;\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Link color=\"textPrimary\" href={this.props.repo.clone_url}>{this.props.repo.name}</Link>\r\n                <Typography color=\"textSecondary\">{this.props.repo.description}</Typography>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport GitRepository from './GitRepository.js';\r\nimport { List } from '@material-ui/core';\r\n\r\nexport default class GitRepositoryList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {}\r\n        this.performSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.performSearch();\r\n    }\r\n\r\n    performSearch() {\r\n        axios.get(`https://api.github.com/users/RomainCharpentier/repos`)\r\n            .then(response => {\r\n                this.setState({\r\n                    repos: response.data\r\n                });\r\n                this.forceUpdate(); // call render()\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const results = this.state.repos;\r\n        let repos;\r\n        if (results && results.length > 0) {\r\n            results.sort(GitRepository.compare);\r\n            repos = results.map(repo => <GitRepository key={repo.id} repo={repo} />);\r\n        }\r\n        return(\r\n            <List >\r\n                {repos}\r\n            </List >\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Slider, withStyles } from '@material-ui/core';\r\n\r\nconst styles = {\r\n    slider: {\r\n      padding: '22px 0px'\r\n    }\r\n};\r\n\r\nclass Skill extends Component {\r\n\r\n    render() {\r\n        const { classes, value } = this.props;\r\n        console.log(this.props)\r\n\r\n        return (\r\n            <Slider\r\n                classes={{ container: classes.slider }}\r\n                value={value}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Skill);","import React, { Component } from 'react';\r\nimport { Box, withStyles } from '@material-ui/core';\r\nimport Skill from './Skill.js';\r\n\r\nconst styles = {\r\n    slider: {\r\n      padding: '22px 0px'\r\n    }\r\n};\r\n\r\nclass SkillList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Box display='flex'>\r\n                <Skill value='10' />\r\n                <Skill value='20' />\r\n                <Skill value='20' />\r\n                <Skill value='20' />\r\n                <Skill value='20' />\r\n                <Skill value='20' />\r\n                <Skill value='20' />\r\n                <Skill value='20' />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SkillList);","import React, { Component } from 'react';\r\nimport GitRepositoryList from '../components/GitRepositoryList';\r\nimport { translate } from 'react-multi-lang';\r\nimport { Box, Container, Link, Typography, Avatar } from '@material-ui/core';\r\nimport SkillList from '../components/SkillList';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nclass MainPage extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <Container maxWidth=\"sm\">\r\n                <Box my={4}>\r\n                    <Typography color='textPrimary' variant=\"h4\" component=\"h1\" gutterBottom>\r\n                        {this.props.t('home.title', {param: 'react'})}\r\n                    </Typography>\r\n                    <Typography color='textPrimary' gutterBottom>\r\n                        {this.props.t('home.description', {param: 'react'})}\r\n                    </Typography>\r\n                    <SkillList />\r\n                    <GitRepositoryList />\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default translate(MainPage);","import React from \"react\";\r\nimport { Link } from '@material-ui/core';\r\nimport { translate } from 'react-multi-lang';\r\n\r\nclass NotFoundPage extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <h3>{this.props.t('notfoundpage.title')}</h3>\r\n            <Link href='#'>{this.props.t('notfoundpage.link')}</Link>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default translate(NotFoundPage);","import React, { Component } from 'react';\r\nimport under_construction from '../assets/under_construction.png';\r\nimport { Container, withStyles } from '@material-ui/core';\r\n\r\nconst styles = {\r\n    logo: {\r\n        width: 'inherit',\r\n        height: 'auto'\r\n    }\r\n};\r\n\r\nclass ConstructionPage extends Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return(\r\n            <Container maxWidth=\"sm\">\r\n                <img className={classes.logo} alt='under construction logo' src={under_construction} />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ConstructionPage);","import React, { Component } from 'react';\r\nimport { setLanguage } from 'react-multi-lang';\r\nimport { RadioGroup, Radio, FormControlLabel } from '@material-ui/core';\r\n\r\nclass LangButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 'fr'\r\n        };\r\n        this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            value: 'fr'\r\n        });\r\n        setLanguage(event.target.value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <RadioGroup\r\n                aria-label=\"language\"\r\n                name=\"language1\"\r\n                defaultValue='fr'\r\n                onChange={this.handleChange}\r\n            >\r\n                <FormControlLabel value=\"fr\" control={<Radio />} label=\"FR\" />\r\n                <FormControlLabel value=\"en\" control={<Radio />} label=\"EN\" />\r\n            </RadioGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LangButton;","import React, { Component, Fragment } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Drawer, AppBar, Toolbar, List, Typography, Divider, IconButton, ListItem, ListItemIcon, ListItemText, withStyles, Avatar } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport LangButton from './LangButton';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        })\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end'\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        marginLeft: -drawerWidth\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        }),\r\n        marginLeft: 0\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    }\r\n});\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'open': false\r\n        };\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({\r\n            'open': true\r\n        })\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({\r\n            'open': false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return(\r\n            <Fragment>\r\n                <AppBar\r\n                    color='inherit'\r\n                    position=\"sticky\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: this.state.open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap className={classes.title} align='left'>\r\n                            Resume\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Romain Charpentier\r\n                        </Typography>\r\n                        <Avatar src='https://avatars2.githubusercontent.com/u/35954925?s=460&v=4' />\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={this.state.open}\r\n                    classes={{\r\n                    paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div \r\n                        className={classes.drawerHeader} \r\n                        onClick={this.handleDrawerClose}\r\n                    >\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <IconButton onClick={()=> window.open(\"https://www.linkedin.com/in/romain-charpentier/\", \"_blank\")}>\r\n                        <LinkedInIcon />\r\n                    </IconButton>\r\n                    <LangButton />\r\n                    <button onClick={this.props.theme}>change</button>\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\nimport logo from './assets/logo.svg';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { translate } from 'react-multi-lang';\nimport { CssBaseline, ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport MainPage from './pages/MainPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport ConstructionPage from './pages/ConstructionPage';\nimport Header from './components/Header';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          theme: {\n            palette: {\n                type: \"dark\"\n            }\n          }\n        };\n        this.toggleDarkTheme.bind(this);\n    }\n\n     // we change the palette type of the theme in state\n    toggleDarkTheme = () => {\n        let newPaletteType = this.state.theme.palette.type === \"light\" ? \"dark\" : \"light\";\n        this.setState({\n            theme: {\n                palette: {\n                    type: newPaletteType\n                }\n            }\n        });\n    };\n\n    render() {\n        const isWip = true;\n        let routes;\n        if (!isWip) {\n            routes = (\n                <Router basename=\"/\">\n                    <Switch>\n                        <Route exact path=\"/\" component={MainPage} />\n                        <Route component={NotFoundPage} />\n                    </Switch>\n                </Router>);\n        } else {\n            routes = <ConstructionPage />;\n        }\n        return (\n            <div className=\"App\">\n                <ThemeProvider theme={createMuiTheme(this.state.theme)}>\n                    <CssBaseline />\n                    {!isWip && <Header theme={this.toggleDarkTheme} />}\n                    {!isWip && <img src={logo} className='App-logo' alt='logo' />}\n                    {routes}\n                </ThemeProvider>\n            </div>\n        );\n    }\n}\n\nexport default translate(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { setDefaultTranslations, setDefaultLanguage } from 'react-multi-lang'\r\nimport fr from './translations/fr.json'\r\nimport en from './translations/en.json'\r\n\r\nsetDefaultTranslations({fr, en})\r\nsetDefaultLanguage('fr')\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/under_construction.ba4c2dda.png\";"],"sourceRoot":""}